/* 
 * The MIT License
 *
 * Copyright 2016 Viktor Radzivilo.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.vrsl.jet.modeller.erd.editor.schema.dialogs;

import java.awt.Color;
import java.awt.Font;
import javax.swing.JColorChooser;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import org.openide.windows.WindowManager;
import org.vrsl.jet.modeller.erd.editor.schema.view.SchemaText;

@SuppressWarnings({"unchecked", "rawtypes"})
public class SchemaTextDialog extends javax.swing.JDialog {

    private SchemaText data;
    private boolean updated = false;
    private boolean initialisation = true;
    private final String fontSizes[] = {
        "8", "9", "10", "11", "12", "14", "16", "18", "20", "22", "24", "26", "28", "36", "48", "72"
    };
    private Color color;

    /**
     * Creates new form SchemaTextDialog
     */
    public SchemaTextDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        /////////////////////////////////////////////////
        // Here font sizes
        for (String fs : fontSizes) {
            jFontSizeComboBox.addItem(fs);
        }

        /////////////////////////////////////////////////
        // Here font names
        jFontNameComboBox.addItem("Arial");
        jFontNameComboBox.addItem("Courier");
        jFontNameComboBox.addItem("Helvetica");

        jTextPane.setFont(new Font("Courier", Font.PLAIN, 12));

        String title = WindowManager.getDefault().getMainWindow().getTitle();
        setTitle(title);

        setCenter();
        initialisation = false;
    }

    private void setCenter() {
        java.awt.Rectangle screenRect = this.getGraphicsConfiguration().getBounds();
        this.setLocation(
                screenRect.x + screenRect.width / 2 - this.getSize().width / 2,
                screenRect.y + screenRect.height / 2 - this.getSize().height / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jAcceptButton = new javax.swing.JButton();
        jCancelButton = new javax.swing.JButton();
        jHelpButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jFontNameComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jFontSizeComboBox = new javax.swing.JComboBox();
        jBoldToggleButton = new javax.swing.JToggleButton();
        jItalicToggleButton = new javax.swing.JToggleButton();
        jUnderlinedToggleButton = new javax.swing.JToggleButton();
        jColorButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(595, 345));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMaximumSize(new java.awt.Dimension(230, 32767));
        jPanel1.setPreferredSize(new java.awt.Dimension(16, 100));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/vrsl/jet/modeller/erd/images/DialogTitleSchemaText.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setMinimumSize(new java.awt.Dimension(519, 35));
        jPanel2.setPreferredSize(new java.awt.Dimension(519, 35));

        org.openide.awt.Mnemonics.setLocalizedText(jAcceptButton, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jAcceptButton.text")); // NOI18N
        jAcceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAcceptButtonActionPerformed(evt);
            }
        });
        jPanel2.add(jAcceptButton);

        org.openide.awt.Mnemonics.setLocalizedText(jCancelButton, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jCancelButton.text")); // NOI18N
        jCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelButtonActionPerformed(evt);
            }
        });
        jPanel2.add(jCancelButton);

        org.openide.awt.Mnemonics.setLocalizedText(jHelpButton, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jHelpButton.text")); // NOI18N
        jPanel2.add(jHelpButton);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setMaximumSize(new java.awt.Dimension(230, 210));
        jPanel3.setMinimumSize(new java.awt.Dimension(230, 210));
        jPanel3.setPreferredSize(new java.awt.Dimension(230, 210));
        jPanel3.setLayout(new java.awt.BorderLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jLabel1.text")); // NOI18N
        jPanel4.add(jLabel1);

        jFontNameComboBox.setFocusable(false);
        jFontNameComboBox.setMaximumSize(new java.awt.Dimension(200, 27));
        jFontNameComboBox.setMinimumSize(new java.awt.Dimension(200, 27));
        jFontNameComboBox.setPreferredSize(new java.awt.Dimension(200, 27));
        jFontNameComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jFontNameComboBoxItemStateChanged(evt);
            }
        });
        jPanel4.add(jFontNameComboBox);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jLabel2.text")); // NOI18N
        jPanel4.add(jLabel2);

        jFontSizeComboBox.setFocusable(false);
        jFontSizeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jFontSizeComboBoxItemStateChanged(evt);
            }
        });
        jPanel4.add(jFontSizeComboBox);

        jBoldToggleButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jBoldToggleButton, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jBoldToggleButton.text")); // NOI18N
        jBoldToggleButton.setFocusable(false);
        jBoldToggleButton.setMaximumSize(new java.awt.Dimension(41, 27));
        jBoldToggleButton.setMinimumSize(new java.awt.Dimension(41, 27));
        jBoldToggleButton.setPreferredSize(new java.awt.Dimension(41, 27));
        jBoldToggleButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jBoldToggleButtonStateChanged(evt);
            }
        });
        jPanel4.add(jBoldToggleButton);

        jItalicToggleButton.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jItalicToggleButton, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jItalicToggleButton.text")); // NOI18N
        jItalicToggleButton.setFocusable(false);
        jItalicToggleButton.setMaximumSize(new java.awt.Dimension(41, 27));
        jItalicToggleButton.setMinimumSize(new java.awt.Dimension(41, 27));
        jItalicToggleButton.setPreferredSize(new java.awt.Dimension(41, 27));
        jItalicToggleButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jItalicToggleButtonStateChanged(evt);
            }
        });
        jPanel4.add(jItalicToggleButton);

        jUnderlinedToggleButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jUnderlinedToggleButton, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jUnderlinedToggleButton.text")); // NOI18N
        jUnderlinedToggleButton.setFocusable(false);
        jUnderlinedToggleButton.setMaximumSize(new java.awt.Dimension(41, 27));
        jUnderlinedToggleButton.setMinimumSize(new java.awt.Dimension(41, 27));
        jUnderlinedToggleButton.setPreferredSize(new java.awt.Dimension(41, 27));
        jUnderlinedToggleButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jUnderlinedToggleButtonStateChanged(evt);
            }
        });
        jPanel4.add(jUnderlinedToggleButton);

        jColorButton.setFont(new java.awt.Font("Lucida Console", 0, 13)); // NOI18N
        jColorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/vrsl/jet/modeller/erd/images/color.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jColorButton, org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jColorButton.text")); // NOI18N
        jColorButton.setActionCommand(org.openide.util.NbBundle.getMessage(SchemaTextDialog.class, "SchemaTextDialog.jColorButton.actionCommand")); // NOI18N
        jColorButton.setFocusable(false);
        jColorButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jColorButton.setMaximumSize(new java.awt.Dimension(41, 27));
        jColorButton.setMinimumSize(new java.awt.Dimension(41, 27));
        jColorButton.setPreferredSize(new java.awt.Dimension(41, 27));
        jColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jColorButtonActionPerformed(evt);
            }
        });
        jPanel4.add(jColorButton);

        jPanel3.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setViewportView(jTextPane);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAcceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAcceptButtonActionPerformed
        applayUpdates();
        updated = true;
        dispose();
    }//GEN-LAST:event_jAcceptButtonActionPerformed

    private void jCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_jCancelButtonActionPerformed

    private void jFontNameComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jFontNameComboBoxItemStateChanged
        setTextPaneFontAndColor();
    }//GEN-LAST:event_jFontNameComboBoxItemStateChanged

    private void jFontSizeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jFontSizeComboBoxItemStateChanged
        setTextPaneFontAndColor();
    }//GEN-LAST:event_jFontSizeComboBoxItemStateChanged

    private void jBoldToggleButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jBoldToggleButtonStateChanged
        setTextPaneFontAndColor();
    }//GEN-LAST:event_jBoldToggleButtonStateChanged

    private void jItalicToggleButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jItalicToggleButtonStateChanged
        setTextPaneFontAndColor();
    }//GEN-LAST:event_jItalicToggleButtonStateChanged

    private void jUnderlinedToggleButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jUnderlinedToggleButtonStateChanged
        setTextPaneFontAndColor();
    }//GEN-LAST:event_jUnderlinedToggleButtonStateChanged

    private void jColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jColorButtonActionPerformed
        color = JColorChooser.showDialog(rootPane, this.getTitle(), color);
        setTextPaneFontAndColor();
    }//GEN-LAST:event_jColorButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAcceptButton;
    private javax.swing.JToggleButton jBoldToggleButton;
    private javax.swing.JButton jCancelButton;
    private javax.swing.JButton jColorButton;
    private javax.swing.JComboBox jFontNameComboBox;
    private javax.swing.JComboBox jFontSizeComboBox;
    private javax.swing.JButton jHelpButton;
    private javax.swing.JToggleButton jItalicToggleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane;
    private javax.swing.JToggleButton jUnderlinedToggleButton;
    // End of variables declaration//GEN-END:variables

    public boolean isUpdated() {
        return updated;
    }

    /**
     * @param data the data to set
     */
    public void setData(SchemaText data) {
        this.data = data;
        jTextPane.setText(data.getText());
        jFontNameComboBox.setSelectedItem(data.getFontName());
        jFontSizeComboBox.setSelectedItem("" + data.getFontSize());
        // -- Setting font type buttons ----------------------------------
        if ((data.getFontType() & Font.BOLD & 255) != 0) {
            jBoldToggleButton.setSelected(true);
        }
        if ((data.getFontType() & Font.ITALIC & 255) != 0) {
            jItalicToggleButton.setSelected(true);
        }
        if ((data.getFontType() & 256) != 0) {
            jUnderlinedToggleButton.setSelected(true);
        }
        color = data.getColor();
        setTextPaneFontAndColor();
    }

    private void applayUpdates() {
        data.setText(jTextPane.getText());
        int fontType = 0;
        if (jBoldToggleButton.isSelected()) {
            fontType |= Font.BOLD;
        } else {
            fontType |= Font.PLAIN;
        }
        if (jItalicToggleButton.isSelected()) {
            fontType |= Font.ITALIC;
        }
        if (jUnderlinedToggleButton.isSelected()) {
            fontType |= 256;
        }
        data.setFont(
                jFontNameComboBox.getSelectedItem().toString(),
                Integer.parseInt(jFontSizeComboBox.getSelectedItem().toString()),
                fontType);
        data.setColor(color);

    }

    private void setTextPaneFontAndColor() {
        if (initialisation) {
            return;
        }
        int fontType = 0;
        if (jBoldToggleButton.isSelected()) {
            fontType |= Font.BOLD;
        } else {
            fontType |= Font.PLAIN;
        }
        if (jItalicToggleButton.isSelected()) {
            fontType |= Font.ITALIC;
        }

        SimpleAttributeSet underline = new SimpleAttributeSet();
        StyleConstants.setUnderline(underline, jUnderlinedToggleButton.isSelected());
        jTextPane.getStyledDocument().setCharacterAttributes(0, jTextPane.getText().length(), underline, false);

        Font f = new Font(
                jFontNameComboBox.getSelectedItem().toString(),
                fontType & 255,
                Integer.parseInt(jFontSizeComboBox.getSelectedItem().toString()));
        jTextPane.setFont(f);
        jTextPane.setForeground(color);
        jColorButton.setForeground(color);
    }
}
